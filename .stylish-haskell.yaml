columns: 90
newline: native

steps:
  - records:
      equals: "indent 2"
      first_field: "same_line"
      field_comment: 4
      deriving: 2
      sort_deriving: true
      break_enums: true
      via: "indent 2"
      break_single_constructors: false

  - imports:
      align: group
      list_align: after_alias
      pad_module_names: true
      long_list_align: new_line_multiline
      empty_list_align: inherit
      list_padding: 4
      separate_lists: true
      space_surround: false

  - trailing_whitespace: {}

  - simple_align:
      cases: always
      top_level_patterns: always
      records: always
      multi_way_if: always

  - language_pragmas:
      align: false
      remove_redundant: true
      style: vertical



language_extensions:
  - BangPatterns
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveDataTypeable
  - DeriveGeneric
  - DerivingStrategies
  - DerivingVia
  - ExplicitNamespaces
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - NoImplicitPrelude
  - OverloadedStrings
  - QuasiQuotes
  - RecordWildCards
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - ViewPatterns